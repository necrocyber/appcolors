{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/clipboard/clipboard.component.ts","webpack:///src/app/components/clipboard/clipboard.component.html","webpack:///src/app/components/grid/grid.component.ts","webpack:///src/app/components/grid/grid.component.html","webpack:///src/app/services/colors.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ClipboardComponent","colorService","getColor","color$","subscribe","res","color","GridComponent","digito","selectPage","sendColor","n","pantone","getColors","data","length","alert","lasPantone","ColorsService","http","URL_COLORS","colorSubject","asObservable","next","error","errorMessage","ErrorEvent","message","status","window","get","pipe","handleError","providedIn","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,WAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,uH;AAAA;AAAA;ACPzB;;AACI;;AACA;;AACJ;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAuBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBALJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAKI;;;;0HAGFA,S,EAAS;AAAA,uBAZlB,2DAYkB,EAXlB,6EAWkB,EAVlB,4FAUkB;AAVA,kBAGlB,uEAHkB,EAIlB,oEAJkB,EAKlB,qEALkB;AAUA,O;AALF,K;;;;;sEAKPA,S,EAAS;cAdrB,sDAcqB;eAdZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,4FAHY,CADN;AAMRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,CAND;AAWRQ,mBAAS,EAAE,EAXH;AAYRC,mBAAS,EAAE,CAAC,2DAAD;AAZH,S;AAcY,Q;;;;;;;;;;;;;;;;;;ACvBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,kB;AAIX,kCAAoBC,YAApB,EAAiD;AAAA;;AAA7B,aAAAA,YAAA,GAAAA,YAAA;AACnB;;;;mCAEO;AACN,eAAKC,QAAL;AACD;;;mCAEU;AAAA;;AACT,eAAKD,YAAL,CAAkBE,MAAlB,CAAyBC,SAAzB,CAAmC,UAAAC,GAAG,EAAI;AACxC,iBAAI,CAACC,KAAL,GAAaD,GAAb;AACD,WAFD;AAGD;;;;;;;uBAfUL,kB,EAAkB,uI;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,2J;AAAA;AAAA;ACT/B;;AACI;;AACI;;AAAc;;AAAgB;;AAC9B;;AAA+B;;AAAgB;;AAC/C;;AAA+B;;AAAiB;;AAChD;;AAA4B;;AAAyB;;AACzD;;AACJ;;;;AALsB;;AAAA;;AACiB;;AAAA;;AACA;;AAAA;;AACH;;AAAA;;;;;;;;sEDIvBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTP,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEQ;;AAAK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACD;;AAAK;;AAAiB;;AACtB;;AAA+B;;AAAiB;;AAChD;;AAA+B;;AAAkB;;AACjD;;AAA4B;;AAA0B;;AAC1D;;;;;;AAJS;;AAAA;;AAC0B;;AAAA;;AACA;;AAAA;;AACH;;AAAA;;;;QDG3BY,a;AAMX,6BAAoBN,YAApB,EAAiD;AAAA;;AAA7B,aAAAA,YAAA,GAAAA,YAAA;AAFpB,aAAAO,MAAA,GAAiB,CAAjB;AAEoD;;;;mCAE5C;AACN,eAAKC,UAAL,CAAgB,KAAKD,MAArB;AACD;;;oCAEWF,K,EAAc;AACxB,eAAKL,YAAL,CAAkBS,SAAlB,CAA4BJ,KAA5B;AACD;;;mCAEUK,C,EAAG;AAAA;;AACZ,cAAGA,CAAC,GAAG,CAAP,EAAU;AACRA,aAAC,GAAG,CAAJ;AACD;;AAED,eAAKH,MAAL,GAAcG,CAAd;AACA,eAAKC,OAAL,GAAe,EAAf;AAEA,eAAKX,YAAL,CAAkBY,SAAlB,CAA4BF,CAA5B,EAA+BP,SAA/B,CAAyC,UAACE,KAAD,EAAmB;AAC1D,gBAAGA,KAAK,CAACQ,IAAN,CAAWC,MAAX,GAAoB,CAAvB,EAA0B;AACxBC,mBAAK,CAAC,wBAAD,CAAL;AACA,oBAAI,CAACJ,OAAL,GAAe,MAAI,CAACK,UAApB;AACA,oBAAI,CAACT,MAAL,IAAe,CAAf;AACA,qBAAO,KAAP;AACD;;AACD,kBAAI,CAACS,UAAL,GAAkBX,KAAK,CAACQ,IAAxB;AACA,kBAAI,CAACF,OAAL,GAAeN,KAAK,CAACQ,IAArB;AACD,WATD;AAUD;;;;;;;uBAlCUP,a,EAAa,uI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,wX;AAAA;AAAA;ACT1B;;AACI;;AACI;;AAMJ;;AACA;;AACI;;AAAG;AAAA,mBAAS,IAAAE,UAAA,cAAkB,CAAlB,CAAT;AAA6B,WAA7B;;AAA+C;;AAAQ;;AAC1D;;AAAG;AAAA,mBAAS,IAAAA,UAAA,cAAkB,CAAlB,CAAT;AAA6B,WAA7B;;AAA+C;;AAAS;;AAC/D;;AACJ;;;;AAXmG;;AAAA;;;;;;;;;sEDOtFF,a,EAAa;cALzB,uDAKyB;eALf;AACTd,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauB,a;AAyBX,6BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAvBpB,aAAAC,UAAA,GAAa,oCAAb;AAEA,aAAAC,YAAA,GAAe,IAAI,4CAAJ,EAAf;AAEA,aAAAlB,MAAA,GAAS,KAAKkB,YAAL,CAAkBC,YAAlB,EAAT;AAmByC;;;;kCAjB/BhB,K,EAAc;AACtB,eAAKe,YAAL,CAAkBE,IAAlB,CAAuBjB,KAAvB;AACD;;;oCAEWkB,K,EAA0B;AACpC,cAAIC,YAAY,GAAG,gBAAnB;;AACA,cAAID,KAAK,CAACA,KAAN,YAAuBE,UAA3B,EAAuC;AACrC;AACAD,wBAAY,oBAAaD,KAAK,CAACA,KAAN,CAAYG,OAAzB,CAAZ;AACD,WAHD,MAGO;AACL;AACAF,wBAAY,yBAAkBD,KAAK,CAACI,MAAxB,wBAA4CJ,KAAK,CAACG,OAAlD,CAAZ;AACD;;AACDE,gBAAM,CAACb,KAAP,CAAaS,YAAb;AACA,iBAAO,wDAAWA,YAAX,CAAP;AACD;;;kCAISd,C,EAAC;AACT,iBAAO,KAAKQ,IAAL,CAAUW,GAAV,WAAyB,KAAKV,UAAL,GAAgBT,CAAzC,GAA8CoB,IAA9C,CAAmD,6DAAM,CAAN,CAAnD,EAA6D,kEAAW,KAAKC,WAAhB,CAA7D,CAAP;AACD;;;;;;;uBA7BUd,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVe,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;;;;;;;;;;;;;;;;ACT1B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACd,KAAR,CAAca,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'appcolors';\n}\n","<div class=\"container d-flex flex-column flex-wrap flex-sm-row\">\r\n    <app-grid class=\"flex-fill margin-block\"></app-grid>\r\n    <app-clipboard class=\"flex-fill margin-block\"></app-clipboard>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { GridComponent } from './components/grid/grid.component';\nimport { ClipboardComponent } from './components/clipboard/clipboard.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridComponent,\n    ClipboardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Color } from '../../interfaces/colors';\nimport { ColorsService } from '../../services/colors.service'\n\n@Component({\n  selector: 'app-clipboard',\n  templateUrl: './clipboard.component.html',\n  styleUrls: ['./clipboard.component.css']\n})\nexport class ClipboardComponent implements OnInit {\n\n  color: Color;\n\n  constructor(private colorService: ColorsService) {\n  }\n\n  ngOnInit(): void {\n    this.getColor()\n  }\n\n  getColor() {\n    this.colorService.color$.subscribe(res => {\n      this.color = res;\n    })\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body d-flex flex-column justify-content-between\">\n        <div class=\"\">{{ color.year }}</div>\n        <div class=\"align-self-center\">{{ color.name }}</div>\n        <div class=\"align-self-center\">{{ color.color }}</div>\n        <div class=\"align-self-end\">{{ color.pantone_value }}</div>\n    </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ColorsService } from '../../services/colors.service'\nimport { Colors, Color } from '../../interfaces/colors'\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n\n  pantone: Color[];\n  lasPantone: Color[];\n  digito: number = 1;\n\n  constructor(private colorService: ColorsService) { }\n\n  ngOnInit(): void {\n    this.selectPage(this.digito)\n  }\n\n  selectColor(color: Color) {\n    this.colorService.sendColor(color)\n  }\n\n  selectPage(n) {\n    if(n < 1) {\n      n = 1;\n    }\n\n    this.digito = n;\n    this.pantone = [];\n    \n    this.colorService.getColors(n).subscribe((color: Colors) => {\n      if(color.data.length < 1) {\n        alert(\"No existen mas páginas\");\n        this.pantone = this.lasPantone;\n        this.digito -= 1;\n        return false;\n      }\n      this.lasPantone = color.data;\n      this.pantone = color.data;\n    })\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body d-flex flex-wrap\">\n        <div (click)=\"selectColor(panton)\" class=\"item d-flex flex-column justify-content-between\" *ngFor=\"let panton of pantone\">\n            <div>{{ panton.year }}</div>\n            <div class=\"align-self-center\">{{ panton.name }}</div>\n            <div class=\"align-self-center\">{{ panton.color }}</div>\n            <div class=\"align-self-end\">{{ panton.pantone_value }}</div>\n        </div>\n    </div>\n    <div class=\"card-footer d-flex justify-content-between\">\n        <p (click)=\"selectPage(digito-1)\" class=\"btn-pag\">Anterior</p>\n        <p (click)=\"selectPage(digito+1)\" class=\"btn-pag\">Siguiente</p>\n    </div>\n</div>\n\n","import { Injectable } from '@angular/core';\nimport { Colors, Color } from '../interfaces/colors';\nimport { Observable, throwError, Subject  } from  'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpErrorResponse  } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorsService {\n\n  URL_COLORS = 'https://reqres.in/api/colors?page='\n\n  colorSubject = new Subject<Color>();\n\n  color$ = this.colorSubject.asObservable();\n\n  sendColor(color: Color) {\n    this.colorSubject.next(color)\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let errorMessage = 'Unknown error!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side errors\n      errorMessage = `Error: ${error.error.message}`;\n    } else {\n      // Server-side errors\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n  }\n\n  constructor(private http: HttpClient) { }\n\n  getColors(n): Observable<Colors> {\n    return this.http.get<Colors>(`${this.URL_COLORS+n}`).pipe(retry(3), catchError(this.handleError))\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}